{"version":3,"sources":["components/DescripcionPokemon.js","components/PantallaPrincipal.js","components/MiniPantalla.js","components/TipoPokemon.js","components/Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["DescripcionPokemon","descripcion","className","PantallaPrincipal","pokemon","name","sprites","src","other","front_default","alt","MiniPantalla","inputPokemon","setInputPokemon","type","value","onChange","e","texto","target","TipoPokemon","slot","types","stringTipo","filter","tipos","undefined","rutaImagen","Pokedex","useState","busqueda","setBusqueda","nroActual","setNroActual","pkmnActual","setPkmnActual","datosExtraPoke","setDatosExtraPoke","descripcionPoke","setDescripcionPoke","totalPokemon","setTotalPokemon","useEffect","consultaTotalPokemon","consultaPokemon","a","axios","get","resultado","data","count","url","url2","all","then","spread","responses","id","stringDescripcion","consultaDescipcionPoke","flavor_text_entries","catch","errors","lista_descripciones","entrada","language","str","flavor_text","normalize","replace","clickCruceta","direccion","nroTemp","onClick","string","process","response","Audio","play","reproducirAudio","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAIeA,EAJY,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC1B,OAAO,mBAAGC,UAAU,yBAAb,SAAuCD,KCgBnCE,EAjBW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OACI,qBAAKJ,UAAU,2BAAf,SACI,qBACIK,IACID,GAAsB,MAAXF,EACLE,EAAQE,MAAM,oBAAoBC,cAClC,+BAEVC,IAAKL,OCMNM,EAjBM,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAKlC,OACI,qBAAKX,UAAU,gBAAf,SACI,uBACIY,KAAK,OACLZ,UAAU,sBACVa,MAAOH,EACPI,SAAU,SAACC,GAAD,OAVEC,EAUoBD,EAAEE,OAAOJ,WATjDF,EAAgBK,GADG,IAACA,QCsBbE,EAvBK,SAAC,GAAuB,IAArBhB,EAAoB,EAApBA,QAASiB,EAAW,EAAXA,KACpBC,EAAUlB,EAAVkB,MACR,GAAIA,EAAO,CAAC,IAAD,IAEDC,EAAU,WADC,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAOE,QAAO,SAACC,GAAD,OAAWA,EAAMJ,OAASA,MAC7B,UAAf,iBAAG,EAAgBP,YAAnB,aAAG,EAAsBT,KACzC,QAAmBqB,IAAfH,EAA0B,CAC1B,IAAMI,EAAU,0BAAsBJ,EAAtB,QAChB,OACI,qBAAKrB,UAAU,0BAAf,SACI,qBAAKK,IAAKoB,EAAYjB,IAAKa,MAInC,OAAO,qBAAKrB,UAAU,4BAG1B,OACI,qBAAKA,UAAU,0BAAf,SACI,qBAAKK,IAAI,8BAA8BG,IAAI,eCgN5CkB,EA3NC,WACZ,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOjB,EAAP,KAAqBC,EAArB,KACA,EAAkCgB,mBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4CN,mBAAS,IAArD,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA8CR,mBAAS,KAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAAwCV,mBAAS,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACNC,IACAC,MACD,CAACd,IAEJ,IASMa,EAAoB,uCAAG,4BAAAE,EAAA,iHAEDC,IAAMC,IAFL,oDAEnBC,EAFmB,OAGzBP,EAAgBO,EAAUC,KAAKC,OAHN,2CAAH,qDAMpBN,EAAe,uCAAG,8BAAAC,EAAA,sDACH,KAAbf,IACMqB,EADW,4CACgCrB,GAC3CsB,EAFW,oDAEyCtB,GAC1DgB,IACKO,IAAI,CAACP,IAAMC,IAAII,GAAML,IAAMC,IAAIK,KAC/BE,KACGR,IAAMS,QAAO,WAAmB,IAAD,uBAAdC,EAAc,yBAAdA,EAAc,gBAC3BrB,EAAcqB,EAAU,GAAGP,MAC3BpC,EAAgB2C,EAAU,GAAGP,KAAK5C,MAClC4B,EAAauB,EAAU,GAAGP,KAAKQ,IAE/B,IAAIC,EAAiB,WAAOF,EAAU,GAAGP,KAAKQ,GAAzB,iCACvBE,EACEH,EAAU,GAAGP,KAAKW,sBAElBrB,EAAmBmB,GACnBrB,EAAkBmB,EAAU,GAAGP,UAGtCY,OAAM,SAACC,GACJ3B,EAAc,IACdtB,EAAgB,IAChBoB,EAAa,GACbI,EAAkB,IAClBE,EAAmB,6BAzBX,2CAAH,qDA8BfoB,EAAyB,SAACC,GAC5B,GAAmC,qBAAxBA,EAAqC,CAAC,IAAD,EACtCG,EAAsBH,EAAoBpC,QAC5C,SAACwC,GAAD,MAAuC,OAA1BA,EAAQC,SAAS5D,QAE9BqD,EAjDW,qBADIQ,EAkDsB,UACrCH,EAAoB,UADiB,aACrC,EAAwBI,aAjDfD,EAAIE,UAAU,OAAOC,QAAQ,mBAAoB,IAChDA,QAAQ,UAAW,KAE1B,GAgDP,MAA0B,KAAtBX,EACO,wCAEAA,EAxDO,IAACQ,EA2DvB,MAAO,IAGLI,EAAe,SAACC,GAClB,IAAIC,EAAUxC,EACd,OAAQuC,GACJ,IAAK,MACDC,GAAW,EACX,MACJ,IAAK,SACDA,GAAW,GACX,MACJ,IAAK,QACDA,GAAW,GACX,MACJ,IAAK,MACDA,GAAW,EAKfA,GAAW,GAAKA,EAAUhC,IAC9BP,EAAauC,GACbzC,EAAYyC,KAmBhB,OACI,qBAAKtE,UAAU,UAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,6BACf,qBAAKA,UAAU,iCACf,qBAAKA,UAAU,iCAEnB,qBAAKA,UAAU,uBAEnB,qBAAKA,UAAU,iBAAf,SACI,cAAC,EAAD,CACIE,QAAS8B,MAGjB,sBAAKhC,UAAU,oBAAf,UACI,wBACIA,UAAU,4BACVuE,QAAS,WApC7B1C,EAAYnB,IAkCI,0BAMA,cAAC,EAAD,CACIA,aAAcA,EACdC,gBAAiBA,IAErB,sBAAKX,UAAU,UAAf,UACI,wBACIA,UAAU,yCACVuE,QAAS,kBAAMH,EAAa,UAEhC,sBAAKpE,UAAU,mBAAf,UACI,wBACIA,UAAU,gBACVuE,QAAS,kBAAMH,EAAa,aAEhC,wBACIpE,UAAU,gBACVuE,QAAS,kBAAMH,EAAa,eAGpC,wBACIpE,UAAU,yCACVuE,QAAS,kBAAMH,EAAa,mBAK5C,qBAAKpE,UAAU,UACf,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,cACf,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,4BAAf,SACI,cAAC,EAAD,CACID,YAAaqC,MAGrB,sBAAKpC,UAAU,oBAAf,UACI,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,eAClB,wBAAQA,UAAU,aAAlB,SACI,sBAAMA,UAAU,QAAhB,+BAGR,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,wBAAQA,UAAU,iBAClB,wBAAQA,UAAU,oBAEtB,wBACIA,UAAU,iCACVuE,QAAS,kBA7Fb,SAACrC,GACrB,IAAIsC,EAAM,UAAMtC,EAAe/B,MAAQ,GAA7B,YAAmCsD,EACzCvB,EAAewB,sBAEnB,GAAe,MAAXc,EAAgB,CAChB,IAAMvB,EAAG,uCAAmCwB,mCAAnC,6DAA2HD,GACpI5B,IAAMC,IAAII,GAAKG,MAAK,SAAUsB,GACZ,IAAIC,MAAMD,EAAS3B,MAC3B6B,WAqFyBC,CAAgB3C,IAFnC,6BAOJ,sBAAKlC,UAAU,yBAAf,UACI,cAAC,EAAD,CACIE,QAAS8B,EACTb,KAAM,IAGV,cAAC,EAAD,CACIjB,QAAS8B,EACTb,KAAM,mBCzMvB2D,MAXf,WACI,OACI,eAAC,WAAD,WACI,qBAAK9E,UAAU,SAAf,SACI,qBAAKA,UAAU,eAAf,oCAEJ,cAAC,EAAD,QCEG+E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.e6f3bb2c.chunk.js","sourcesContent":["const DescripcionPokemon = ({ descripcion }) => {\r\n    return <p className=\"texto-pantalla-mediana\">{descripcion}</p>;\r\n};\r\n\r\nexport default DescripcionPokemon;\r\n","const PantallaPrincipal = ({ pokemon }) => {\r\n    const { name, sprites } = pokemon;\r\n\r\n    return (\r\n        <div className=\"pantalla pantalla-grande\">\r\n            <img\r\n                src={\r\n                    sprites || pokemon == null\r\n                        ? sprites.other[\"official-artwork\"].front_default\r\n                        : \"../Iconos/signo_pregunta.png\"\r\n                }\r\n                alt={name}\r\n            ></img>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PantallaPrincipal;\r\n","const MiniPantalla = ({ inputPokemon, setInputPokemon }) => {\r\n    const handleOnChange = (texto) => {\r\n        setInputPokemon(texto);\r\n    };\r\n\r\n    return (\r\n        <div className=\"mini-pantalla\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"texto-mini-pantalla\"\r\n                value={inputPokemon}\r\n                onChange={(e) => handleOnChange(e.target.value)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MiniPantalla;\r\n","const TipoPokemon = ({ pokemon, slot }) => {\r\n    const { types } = pokemon;\r\n    if (types) {\r\n        const tipoPokemon = types?.filter((tipos) => tipos.slot === slot);\r\n        const stringTipo = tipoPokemon[0]?.type?.name;\r\n        if (stringTipo !== undefined) {\r\n            const rutaImagen = `../Iconos/Tipos/${stringTipo}.gif`;\r\n            return (\r\n                <div className=\"pantalla pantalla-chica\">\r\n                    <img src={rutaImagen} alt={stringTipo}></img>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <div className=\"pantalla pantalla-chica\"></div>;\r\n        }\r\n    } else\r\n        return (\r\n            <div className=\"pantalla pantalla-chica\">\r\n                <img src=\"../Iconos/Tipos/unknown.gif\" alt=\"unknown\"></img>\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default TipoPokemon;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DescripcionPokemon from \"./DescripcionPokemon\";\r\nimport PantallaPrincipal from \"./PantallaPrincipal\";\r\nimport MiniPantalla from \"./MiniPantalla\";\r\nimport TipoPokemon from \"./TipoPokemon\";\r\n\r\nconst Pokedex = () => {\r\n    const [busqueda, setBusqueda] = useState(\"\");\r\n    const [inputPokemon, setInputPokemon] = useState(\"\");\r\n    const [nroActual, setNroActual] = useState(0);\r\n    const [pkmnActual, setPkmnActual] = useState({});\r\n    const [datosExtraPoke, setDatosExtraPoke] = useState({});\r\n    const [descripcionPoke, setDescripcionPoke] = useState(\"?\");\r\n    const [totalPokemon, setTotalPokemon] = useState(0);\r\n\r\n    useEffect(() => {\r\n        consultaTotalPokemon();\r\n        consultaPokemon();\r\n    }, [busqueda]);\r\n\r\n    const limpiaDescripcion = (str) => {\r\n        if (typeof str !== \"undefined\") {\r\n            let string = str.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\r\n            return string.replace(/[\\n\\r]/g, \" \");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    };\r\n\r\n    const consultaTotalPokemon = async () => {\r\n        const url = `https://pokeapi.co/api/v2/pokemon-species`;\r\n        const resultado = await axios.get(url);\r\n        setTotalPokemon(resultado.data.count);\r\n    };\r\n\r\n    const consultaPokemon = async () => {\r\n        if (busqueda !== \"\") {\r\n            const url = `https://pokeapi.co/api/v2/pokemon/${busqueda}`;\r\n            const url2 = `https://pokeapi.co/api/v2/pokemon-species/${busqueda}`;\r\n            axios\r\n                .all([axios.get(url), axios.get(url2)])\r\n                .then(\r\n                    axios.spread((...responses) => {\r\n                        setPkmnActual(responses[0].data);\r\n                        setInputPokemon(responses[0].data.name);\r\n                        setNroActual(responses[0].data.id);\r\n\r\n                        let stringDescripcion = `#${responses[0].data.id}\r\n                    ${consultaDescipcionPoke(\r\n                        responses[1].data.flavor_text_entries\r\n                    )}`;\r\n                        setDescripcionPoke(stringDescripcion);\r\n                        setDatosExtraPoke(responses[1].data);\r\n                    })\r\n                )\r\n                .catch((errors) => {\r\n                    setPkmnActual({});\r\n                    setInputPokemon(\"\");\r\n                    setNroActual(0);\r\n                    setDatosExtraPoke({});\r\n                    setDescripcionPoke(\"Pokemon no encontrado\");\r\n                });\r\n        }\r\n    };\r\n\r\n    const consultaDescipcionPoke = (flavor_text_entries) => {\r\n        if (typeof flavor_text_entries !== \"undefined\") {\r\n            const lista_descripciones = flavor_text_entries.filter(\r\n                (entrada) => entrada.language.name === \"es\"\r\n            );\r\n            let stringDescripcion = limpiaDescripcion(\r\n                lista_descripciones[0]?.flavor_text\r\n            );\r\n            if (stringDescripcion === \"\") {\r\n                return \"No hay descripcion para este Pokemon.\";\r\n            } else {\r\n                return stringDescripcion;\r\n            }\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    const clickCruceta = (direccion) => {\r\n        let nroTemp = nroActual;\r\n        switch (direccion) {\r\n            case \"izq\":\r\n                nroTemp -= 1;\r\n                break;\r\n            case \"arriba\":\r\n                nroTemp -= 10;\r\n                break;\r\n            case \"abajo\":\r\n                nroTemp += 10;\r\n                break;\r\n            case \"der\":\r\n                nroTemp += 1;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if (nroTemp <= 0 || nroTemp > totalPokemon) return;\r\n        setNroActual(nroTemp);\r\n        setBusqueda(nroTemp);\r\n    };\r\n\r\n    const clickBuscar = () => {\r\n        setBusqueda(inputPokemon);\r\n    };\r\n\r\n    const reproducirAudio = (datosExtraPoke) => {\r\n        let string = `${datosExtraPoke.name || \"\"},${consultaDescipcionPoke(\r\n            datosExtraPoke.flavor_text_entries\r\n        )}`;\r\n        if (string !== \",\") {\r\n            const url = `http://api.voicerss.org/?key=${process.env.REACT_APP_VOICE_API_KEY}&f=11khz_16bit_stereo&b64=true&c=MP3&hl=es-es&src=${string}`;\r\n            axios.get(url).then(function (response) {\r\n                const audio = new Audio(response.data);\r\n                audio.play();\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"pokedex\">\r\n            <div className=\"cuerpos\">\r\n                <div className=\"tapa-izq\">\r\n                    <div className=\"bordes\">\r\n                        <div className=\"borde-izq\">\r\n                            <div className=\"circulo-cristal\"></div>\r\n                            <div className=\"luz-circulo circulo-rojo\"></div>\r\n                            <div className=\"luz-circulo circulo-amarillo\"></div>\r\n                            <div className=\"luz-circulo circulo-verde\"></div>\r\n                        </div>\r\n                        <div className=\"borde-izq-chico\"></div>\r\n                    </div>\r\n                    <div className=\"marco-pantalla\">\r\n                        <PantallaPrincipal\r\n                            pokemon={pkmnActual}\r\n                        ></PantallaPrincipal>\r\n                    </div>\r\n                    <div className=\"grupo-botones-izq\">\r\n                        <button\r\n                            className=\"boton-circulo circulo-izq\"\r\n                            onClick={() => clickBuscar()}\r\n                        >\r\n                            🔎\r\n                        </button>\r\n                        <MiniPantalla\r\n                            inputPokemon={inputPokemon}\r\n                            setInputPokemon={setInputPokemon}\r\n                        ></MiniPantalla>\r\n                        <div className=\"cruceta\">\r\n                            <button\r\n                                className=\"boton-cruceta boton-cruceta-horizontal\"\r\n                                onClick={() => clickCruceta(\"izq\")}\r\n                            ></button>\r\n                            <div className=\"cruceta-vertical\">\r\n                                <button\r\n                                    className=\"boton-cruceta\"\r\n                                    onClick={() => clickCruceta(\"arriba\")}\r\n                                ></button>\r\n                                <button\r\n                                    className=\"boton-cruceta\"\r\n                                    onClick={() => clickCruceta(\"abajo\")}\r\n                                ></button>\r\n                            </div>\r\n                            <button\r\n                                className=\"boton-cruceta boton-cruceta-horizontal\"\r\n                                onClick={() => clickCruceta(\"der\")}\r\n                            ></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"medio\"></div>\r\n                <div className=\"tapa-der\">\r\n                    <div className=\"borde-der\"></div>\r\n                    <div className=\"interior-tapa-der\">\r\n                        <div className=\"pantalla pantalla-mediana\">\r\n                            <DescripcionPokemon\r\n                                descripcion={descripcionPoke}\r\n                            ></DescripcionPokemon>\r\n                        </div>\r\n                        <div className=\"grupo-botones-der\">\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\"></button>\r\n                            <button className=\"boton-azul\">\r\n                                <span className=\"emoji\">📏</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"grupo-botones-finales\">\r\n                            <div className=\"grupo-botones-blanco\">\r\n                                <button className=\"boton-blanco\"></button>\r\n                                <button className=\"boton-blanco\"></button>\r\n                            </div>\r\n                            <button\r\n                                className=\"boton-circulo circulo-amarillo\"\r\n                                onClick={() => reproducirAudio(datosExtraPoke)}\r\n                            >\r\n                                🔊\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"grupo-pantallas-chicas\">\r\n                            <TipoPokemon\r\n                                pokemon={pkmnActual}\r\n                                slot={1}\r\n                            ></TipoPokemon>\r\n\r\n                            <TipoPokemon\r\n                                pokemon={pkmnActual}\r\n                                slot={2}\r\n                            ></TipoPokemon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pokedex;\r\n","import \"./App.css\";\r\nimport { Fragment } from \"react\";\r\nimport Pokedex from \"./components/Pokedex\";\r\n\r\nfunction App() {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"titulo\">\r\n                <div className=\"texto-titulo\">Pokedex de Nicoyarce</div>\r\n            </div>\r\n            <Pokedex></Pokedex>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}